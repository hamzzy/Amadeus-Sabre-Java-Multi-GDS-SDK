
package wsimport.lib.sabre.airavail;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceException;
import javax.xml.ws.WebServiceFeature;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 */
//TODO
//Need to change the Igbalajobi Jamiu O file path location
@WebServiceClient(name = "OTA_AirAvailService", targetNamespace = "https://webservices.service.sabre.com/websvc", wsdlLocation = "file:/C:/Users/Babatunde/typesafe-sandbox/service.sabre/app/utils/wsdls/OTA_AirAvailLLSRQ/OTA_AirAvailLLS2.1.1RQ.wsdl")
public class OTAAirAvailService
        extends Service {

    private final static URL OTAAIRAVAILSERVICE_WSDL_LOCATION;
    private final static WebServiceException OTAAIRAVAILSERVICE_EXCEPTION;
    private final static QName OTAAIRAVAILSERVICE_QNAME = new QName("https://webservices.service.sabre.com/websvc", "OTA_AirAvailService");

    static {
        URL url = null;
        WebServiceException e = null;
        try {
            url = new URL("file:/C:/Users/Babatunde/typesafe-sandbox/service.sabre/app/utils/wsdls/OTA_AirAvailLLSRQ/OTA_AirAvailLLS2.1.1RQ.wsdl");
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
        }
        OTAAIRAVAILSERVICE_WSDL_LOCATION = url;
        OTAAIRAVAILSERVICE_EXCEPTION = e;
    }

    public OTAAirAvailService() {
        super(__getWsdlLocation(), OTAAIRAVAILSERVICE_QNAME);
    }

    public OTAAirAvailService(WebServiceFeature... features) {
        super(__getWsdlLocation(), OTAAIRAVAILSERVICE_QNAME, features);
    }

    public OTAAirAvailService(URL wsdlLocation) {
        super(wsdlLocation, OTAAIRAVAILSERVICE_QNAME);
    }

    public OTAAirAvailService(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, OTAAIRAVAILSERVICE_QNAME, features);
    }

    public OTAAirAvailService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public OTAAirAvailService(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * @return returns OTAAirAvailPortType
     */
    @WebEndpoint(name = "OTA_AirAvailPortType")
    public OTAAirAvailPortType getOTAAirAvailPortType() {
        return super.getPort(new QName("https://webservices.service.sabre.com/websvc", "OTA_AirAvailPortType"), OTAAirAvailPortType.class);
    }

    /**
     * @param features A list of {@link WebServiceFeature} to configure on the proxy.  Supported features not in the <itemTypes>features</itemTypes> parameter will have their default values.
     * @return returns OTAAirAvailPortType
     */
    @WebEndpoint(name = "OTA_AirAvailPortType")
    public OTAAirAvailPortType getOTAAirAvailPortType(WebServiceFeature... features) {
        return super.getPort(new QName("https://webservices.service.sabre.com/websvc", "OTA_AirAvailPortType"), OTAAirAvailPortType.class, features);
    }

    private static URL __getWsdlLocation() {
        if (OTAAIRAVAILSERVICE_EXCEPTION != null) {
            throw OTAAIRAVAILSERVICE_EXCEPTION;
        }
        return OTAAIRAVAILSERVICE_WSDL_LOCATION;
    }

}
