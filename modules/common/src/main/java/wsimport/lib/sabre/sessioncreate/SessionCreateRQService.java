
package wsimport.lib.sabre.sessioncreate;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceException;
import javax.xml.ws.WebServiceFeature;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 */
//TODO
//Change tunde file path
@WebServiceClient(name = "SessionCreateRQService", targetNamespace = "https://webservices.sabre.com/websvc", wsdlLocation = "file:/C:/Users/Babatunde/Documents/ws-docs/SampleJavaClient.service.sabre/target/wsdls/SessionCreateRQ/" +
        "" +
        ".wsdl")
public class SessionCreateRQService
        extends Service {

    private final static URL SESSIONCREATERQSERVICE_WSDL_LOCATION;
    private final static WebServiceException SESSIONCREATERQSERVICE_EXCEPTION;
    private final static QName SESSIONCREATERQSERVICE_QNAME = new QName("https://webservices.sabre.com/websvc", "SessionCreateRQService");

    static {
        URL url = null;
        WebServiceException e = null;
        try {
            url = new URL("http://webservices.sabre.com/wsdl/sabreXML1.0.00/usg/SessionCreateRQ.wsdl");
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
        }
        SESSIONCREATERQSERVICE_WSDL_LOCATION = url;
        SESSIONCREATERQSERVICE_EXCEPTION = e;
    }

    public SessionCreateRQService() {
        super(__getWsdlLocation(), SESSIONCREATERQSERVICE_QNAME);
    }

    public SessionCreateRQService(WebServiceFeature... features) {
        super(__getWsdlLocation(), SESSIONCREATERQSERVICE_QNAME, features);
    }

    public SessionCreateRQService(URL wsdlLocation) {
        super(wsdlLocation, SESSIONCREATERQSERVICE_QNAME);
    }

    public SessionCreateRQService(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, SESSIONCREATERQSERVICE_QNAME, features);
    }

    public SessionCreateRQService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public SessionCreateRQService(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * @return returns SessionCreatePortType
     */
    @WebEndpoint(name = "SessionCreatePortType")
    public SessionCreatePortType getSessionCreatePortType() {
        return super.getPort(new QName("https://webservices.sabre.com/websvc", "SessionCreatePortType"), SessionCreatePortType.class);
    }

    /**
     * @param features A list of {@link WebServiceFeature} to configure on the proxy.  Supported features not in the <itemTypes>features</itemTypes> parameter will have their default values.
     * @return returns SessionCreatePortType
     */
    @WebEndpoint(name = "SessionCreatePortType")
    public SessionCreatePortType getSessionCreatePortType(WebServiceFeature... features) {
        return super.getPort(new QName("https://webservices.service.sabre.com/websvc", "SessionCreatePortType"), SessionCreatePortType.class, features);
    }

    private static URL __getWsdlLocation() {
        if (SESSIONCREATERQSERVICE_EXCEPTION != null) {
            throw SESSIONCREATERQSERVICE_EXCEPTION;
        }
        return SESSIONCREATERQSERVICE_WSDL_LOCATION;
    }

}
